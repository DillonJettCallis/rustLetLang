
public fun main(): Float = {
    let outside = 2;

    let x = higher({a, b -> Float => a + b * outside});
    pow(2, 8)
}

fun higher(op: {Float, Float -> Float}): Float = {
  let first = op(2, op(4, 5))
  let second = op(first, 3)
  let third = 4 + 3 * 1 - second
  let fourth = second * third
  op(fourth, 2)
}

fun pow(base: Float, power: Float): Float = {
  fun recurse(prev: Float, steps: Float): Float = {
    if (steps <= 0) prev else recurse(prev + base, steps - 1)
  }

  recurse(base, power)
}